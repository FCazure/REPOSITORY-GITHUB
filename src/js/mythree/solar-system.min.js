const scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(55,window.innerWidth/window.innerHeight,.1,1e3),renderer=new THREE.WebGLRenderer({alpha:!0,antialias:!0});renderer.setSize(window.innerWidth,window.innerHeight),document.getElementById("space-background").appendChild(renderer.domElement);const starGeometry=new THREE.BufferGeometry,starMaterial=new THREE.PointsMaterial({color:16777215,size:.1}),starVertices=[];for(let e=0;e<15e3;e++){const e=2e3*(Math.random()-.5),t=2e3*(Math.random()-.5),a=2e3*-Math.random();starVertices.push(e,t,a)}starGeometry.setAttribute("position",new THREE.Float32BufferAttribute(starVertices,3));const stars=new THREE.Points(starGeometry,starMaterial);scene.add(stars);const nebulaTexture=(new THREE.TextureLoader).load(generateNebulaTexture()),nebulaMaterial=new THREE.MeshBasicMaterial({map:nebulaTexture,transparent:!0,opacity:.5,blending:THREE.AdditiveBlending}),nebulaGeometry=new THREE.SphereGeometry(500,64,64),nebula=new THREE.Mesh(nebulaGeometry,nebulaMaterial);scene.add(nebula);const sunGeometry=new THREE.SphereGeometry(5,64,64),sunTexture=(new THREE.TextureLoader).load(generateSunTexture()),sunMaterial=new THREE.MeshBasicMaterial({map:sunTexture,emissive:16776960,emissiveIntensity:.5}),sun=new THREE.Mesh(sunGeometry,sunMaterial);scene.add(sun);const solarRadiationGeometry=new THREE.SphereGeometry(5.5,32,32),solarRadiationMaterial=new THREE.MeshBasicMaterial({color:16776960,transparent:!0,opacity:.2,blending:THREE.AdditiveBlending}),solarRadiation=new THREE.Mesh(solarRadiationGeometry,solarRadiationMaterial);sun.add(solarRadiation);const planetData=[{name:"Mercury",radius:.5,distance:10,color:"#8B8989",speed:.001422,texture:generatePlanetTexture("#8B8989","#696969")},{name:"Venus",radius:.8,distance:15,color:"#E3A857",speed:.001101,texture:generatePlanetTexture("#E3A857","#B8860B")},{name:"Earth",radius:1,distance:20,color:"#4169E1",speed:9e-4,texture:generatePlanetTexture("#4169E1","#228B22"),hasMoon:!0},{name:"Mars",radius:.7,distance:25,color:"#B22222",speed:.00241*.3,texture:generatePlanetTexture("#B22222","#8B0000")},{name:"Jupiter",radius:2,distance:35,color:"#DEB887",speed:.00131*.3,texture:generatePlanetTexture("#DEB887","#CD853F")},{name:"Saturn",radius:1.8,distance:45,color:"#F4A460",speed:291e-6,texture:generatePlanetTexture("#F4A460","#D2691E"),hasRings:!0,ringColor:"#FFD700"},{name:"Uranus",radius:1.2,distance:55,color:"#87CEEB",speed:204e-6,texture:generatePlanetTexture("#87CEEB","#4682B4"),hasRings:!0,ringColor:"#B0E0E6"},{name:"Neptune",radius:1.1,distance:65,color:"#4169E1",speed:162e-6,texture:generatePlanetTexture("#4169E1","#000080")}],planets=planetData.map((e=>{const t=new THREE.SphereGeometry(e.radius,64,64),a=(new THREE.TextureLoader).load(e.texture),n=new THREE.MeshStandardMaterial({map:a,roughness:.7,metalness:.3}),o=new THREE.Mesh(t,n);o.position.x=e.distance,scene.add(o);let r=null;if(e.hasRings){const t=new THREE.RingGeometry(1.5*e.radius,2.2*e.radius,128),a=(new THREE.TextureLoader).load(generateRingTexture(e.ringColor)),n=new THREE.MeshStandardMaterial({map:a,side:THREE.DoubleSide,transparent:!0,opacity:.8});r=new THREE.Mesh(t,n),r.rotation.x=Math.PI/2,o.add(r)}let i=null;if(e.hasMoon){const t=new THREE.SphereGeometry(.2,32,32),a=(new THREE.TextureLoader).load(generatePlanetTexture("#C0C0C0","#808080")),n=new THREE.MeshStandardMaterial({map:a});i=new THREE.Mesh(t,n),i.position.set(2*e.radius,0,0),o.add(i)}return{mesh:o,ring:r,moon:i,distance:e.distance,speed:e.speed}})),stationBodyGeometry=new THREE.CylinderGeometry(1,1,5,16),stationBodyMaterial=new THREE.MeshStandardMaterial({color:12632256,roughness:.5,metalness:.8}),spaceStation=new THREE.Mesh(stationBodyGeometry,stationBodyMaterial),solarPanelGeometry=new THREE.BoxGeometry(6,.1,2),solarPanelTexture=(new THREE.TextureLoader).load(generateSolarPanelTexture()),solarPanelMaterial=new THREE.MeshStandardMaterial({map:solarPanelTexture,roughness:.2,metalness:.8}),leftSolarPanel=new THREE.Mesh(solarPanelGeometry,solarPanelMaterial);leftSolarPanel.position.set(-4,0,0),spaceStation.add(leftSolarPanel);const rightSolarPanel=new THREE.Mesh(solarPanelGeometry,solarPanelMaterial);rightSolarPanel.position.set(4,0,0),spaceStation.add(rightSolarPanel),scene.add(spaceStation);const ambientLight=new THREE.AmbientLight(4210752,1);scene.add(ambientLight);const pointLight=new THREE.PointLight(16777215,2,100);scene.add(pointLight);const sunLight=new THREE.PointLight(16768409,2,100);function generateSunTexture(){const e=document.createElement("canvas");e.width=512,e.height=512;const t=e.getContext("2d"),a=t.createRadialGradient(256,256,0,256,256,256);a.addColorStop(0,"#FFFF00"),a.addColorStop(.5,"#FFA500"),a.addColorStop(1,"#FF4500"),t.fillStyle=a,t.fillRect(0,0,512,512),t.globalCompositeOperation="lighter";for(let e=0;e<20;e++){const e=Math.random()*Math.PI*2,a=100*Math.random()+50;t.strokeStyle=`rgba(255, 255, 255, ${.5*Math.random()+.5})`,t.lineWidth=5*Math.random()+2,t.beginPath(),t.moveTo(256+256*Math.cos(e),256+256*Math.sin(e)),t.lineTo(256+Math.cos(e)*(256+a),256+Math.sin(e)*(256+a)),t.stroke()}return e.toDataURL()}function generatePlanetTexture(e,t){const a=document.createElement("canvas");a.width=512,a.height=512;const n=a.getContext("2d");n.fillStyle=e,n.fillRect(0,0,512,512),n.fillStyle=t;for(let e=0;e<5e3;e++){const e=512*Math.random(),t=512*Math.random(),a=3*Math.random()+1;n.globalAlpha=.5*Math.random()+.5,n.beginPath(),n.arc(e,t,a,0,2*Math.PI),n.fill()}const o=n.createRadialGradient(256,256,0,256,256,256);return o.addColorStop(0,"rgba(255, 255, 255, 0)"),o.addColorStop(1,"rgba(255, 255, 255, 0.2)"),n.fillStyle=o,n.globalCompositeOperation="overlay",n.fillRect(0,0,512,512),a.toDataURL()}function generateRingTexture(e){const t=document.createElement("canvas");t.width=512,t.height=32;const a=t.getContext("2d"),n=a.createLinearGradient(0,0,512,0);n.addColorStop(0,"transparent"),n.addColorStop(.4,e),n.addColorStop(.6,e),n.addColorStop(1,"transparent"),a.fillStyle=n,a.fillRect(0,0,512,32),a.globalCompositeOperation="overlay";for(let e=0;e<100;e++)a.fillStyle=`rgba(255, 255, 255, ${.5*Math.random()})`,a.fillRect(512*Math.random(),0,10*Math.random(),32);return t.toDataURL()}function generateSolarPanelTexture(){const e=document.createElement("canvas");e.width=256,e.height=256;const t=e.getContext("2d");t.fillStyle="#1a1a1a",t.fillRect(0,0,256,256),t.fillStyle="#4169E1";for(let e=0;e<8;e++)for(let a=0;a<8;a++)t.fillRect(32*e+1,32*a+1,30,30);t.globalCompositeOperation="lighter";const a=t.createLinearGradient(0,0,256,256);return a.addColorStop(0,"rgba(255, 255, 255, 0.1)"),a.addColorStop(.5,"rgba(255, 255, 255, 0.3)"),a.addColorStop(1,"rgba(255, 255, 255, 0.1)"),t.fillStyle=a,t.fillRect(0,0,256,256),e.toDataURL()}function generateNebulaTexture(){const e=document.createElement("canvas");e.width=1024,e.height=1024;const t=e.getContext("2d"),a=t.createRadialGradient(512,512,0,512,512,512);a.addColorStop(0,"rgba(25, 25, 112, 0.2)"),a.addColorStop(.5,"rgba(72, 61, 139, 0.2)"),a.addColorStop(1,"rgba(138, 43, 226, 0.2)"),t.fillStyle=a,t.fillRect(0,0,1024,1024),t.fillStyle="rgba(255, 255, 255, 0.5)";for(let e=0;e<1e3;e++)t.beginPath(),t.arc(1024*Math.random(),1024*Math.random(),2*Math.random(),0,2*Math.PI),t.fill();for(let e=0;e<5;e++){const e=1024*Math.random(),a=1024*Math.random(),n=200*Math.random()+100,o=t.createRadialGradient(e,a,0,e,a,n);o.addColorStop(0,"rgba(255, 0, 255, 0.2)"),o.addColorStop(.5,"rgba(0, 255, 255, 0.1)"),o.addColorStop(1,"rgba(0, 0, 0, 0)"),t.fillStyle=o,t.beginPath(),t.arc(e,a,n,0,2*Math.PI),t.fill()}t.globalCompositeOperation="screen";for(let e=0;e<50;e++){const e=1024*Math.random(),a=1024*Math.random(),n=200*Math.random()+50,o=Math.random()*Math.PI*2;t.strokeStyle=`rgba(${255*Math.random()}, ${255*Math.random()}, ${255*Math.random()}, 0.1)`,t.lineWidth=3*Math.random()+1,t.beginPath(),t.moveTo(e,a),t.lineTo(e+Math.cos(o)*n,a+Math.sin(o)*n),t.stroke()}return e.toDataURL()}sun.add(sunLight),camera.position.z=70,camera.position.y=30,camera.lookAt(scene.position);let nebulaRotation=0;function animate(){requestAnimationFrame(animate),planets.forEach(((e,t)=>{e.mesh.rotation.y+=.005/(t+1),e.ring&&(e.ring.rotation.z+=.001);const a=Date.now()*e.speed;if(e.mesh.position.x=Math.cos(a)*e.distance,e.mesh.position.z=Math.sin(a)*e.distance,e.moon){const t=.001*Date.now();e.moon.position.x=Math.cos(t)*e.mesh.geometry.parameters.radius*2,e.moon.position.z=Math.sin(t)*e.mesh.geometry.parameters.radius*2}})),stars.rotation.y+=5e-5;const e=2e-4*Date.now();spaceStation.position.x=50*Math.cos(e),spaceStation.position.z=50*Math.sin(e),spaceStation.position.y=10*Math.sin(5e-4*Date.now()),spaceStation.rotation.y+=.001,sun.rotation.y+=.001,solarRadiation.scale.x=1+.1*Math.sin(.001*Date.now()),solarRadiation.scale.y=1+.1*Math.sin(.001*Date.now()),solarRadiation.scale.z=1+.1*Math.sin(.001*Date.now()),nebulaRotation+=1e-4,nebula.rotation.x=.1*Math.sin(nebulaRotation),nebula.rotation.y=.1*Math.cos(nebulaRotation),renderer.render(scene,camera)}animate(),window.addEventListener("resize",(()=>{camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}));
